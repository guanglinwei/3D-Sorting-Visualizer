(()=>{"use strict";const t={data:[],totalPiecesOfData:12,dataRange:{min:1,max:88},fillWithRandomData:()=>{t.data.splice(0,t.data.length);for(let i=0;i<t.totalPiecesOfData;i++)t.data.push((e=t.dataRange.min,n=t.dataRange.max,Math.floor(Math.random()*(n-e))+e));var e,n},bubbleSort:function(){a.splice(0,a.length);let t=this.data;for(;;){let e=!0;for(let n=0;n<t.length-1;n++)if(a.push({animType:o.flashColor,inds:[n,n+1],col:1}),t[n]>t[n+1]){let i=t[n];t[n]=t[n+1],t[n+1]=i,e=!1,a.push({animType:o.swap,inds:[n,n+1]})}if(e)break}a.push({animType:o.finished})},mergeSort:function(){a.splice(0,a.length);const t=this.data.slice();this.mergeSortArr(this.data,t,0,this.data.length-1),a.push({animType:o.finished})},mergeSortArr:function(t,e,n,i){if(n===i)return;const a=~~(n+(i-n)/2);this.mergeSortArr(e,t,n,a),this.mergeSortArr(e,t,a+1,i),this.merge(e,t,n,a,i)},merge:function(t,e,n,i,s){let l=n,r=i+1,u=n;for(;l<=i&&r<=s;)a.push({animType:o.flashColor,inds:[l,r],col:1}),t[l]<=t[r]?(a.push({animType:o.set,ind:u,val:t[l]}),e[u++]=t[l++]):(a.push({animType:o.set,ind:u,val:t[r]}),e[u++]=t[r++]);for(;l<=i;)a.push({animType:o.set,ind:u,val:t[l]}),e[u++]=t[l++];for(;r<=s;)a.push({animType:o.set,ind:u,val:t[r]}),e[u++]=t[r++]},quickSort:function(){a.splice(0,a.length),this.quickSortArr(this.data,0,this.data.length-1),a.push({animType:o.finished})},quickSortArr:function(t,e,n){if(e<n){let i=this.quickSortPartition(t,e,n);this.quickSortArr(t,e,i-1),this.quickSortArr(t,i+1,n)}},quickSortPartition:function(t,e,n){let i=t[n];a.push({animType:o.set,ind:n,col:2});let s=e-1;for(let l=e;l<n;l++)if(a.push({animType:o.flashColor,inds:[s,l],col:1}),t[l]<i){s++;let e=t[s];t[s]=t[l],t[l]=e,a.push({animType:o.swap,inds:[s,l]})}s++;let l=t[s];return t[s]=t[n],t[n]=l,a.push({animType:o.swap,inds:[s,n]}),a.push({animType:o.set,ind:n,col:0}),s},init:()=>{t.fillWithRandomData()}},e=/^[1-9]\d*$/,n={lastBarCount:12,lastDelay:16,barCountInput:null,delayInput:null,buttonContainer:null,startSortOfType:function(e){i.IS_SORTING||i.ANIM_STARTED||(i.IS_SORTING=!0,i.IS_DATA_RANDOMIZED||(t.fillWithRandomData(),h()),t[e+"Sort"](),i.ANIM_STARTED=!0,async function(t){if(0===t.length)return;const e=Math.max(i.DELAY_MS,17);for(let n=0;n<t.length;n++){let a=t[n];switch(a.animType){case o.resetColor:for(let t of a.inds)t>=0&&t<u.length&&f(t,s.DEFAULT);break;case o.flashColor:if(void 0===a.col||a.col>=s.length)throw`Color of index ${a.col} does not exist. The highest is ${s.length-1}`;for(let t of a.inds)t<0||t>=u.length||(f(t,a.col),setTimeout((()=>{f(t,s.DEFAULT)}),e));break;case o.swap:if(a.inds[0]<0||a.inds[0]>=u.length||a.inds[1]<0||a.inds[1]>=u.length)break;let t=a.inds[0],n=a.inds[1],i=g(t);p(t,g(n)),p(n,i),f(t,s.SWAP),f(n,s.SWAP),setTimeout((()=>{f(t,s.DEFAULT),f(n,s.DEFAULT)}),e);break;case o.set:if(a.ind<0||a.ind>=u.length)break;void 0!==a.val?(p(a.ind,a.val),f(a.ind,s.FLASH),setTimeout((()=>{f(a.ind,s.DEFAULT)}),e)):f(a.ind,a.col);break;case o.finished:c();break;default:console.log(`animation ${a.animType} does not exist`)}await m(i.DELAY_MS)}}(a))},createAll:function(){this.buttonContainer=document.getElementsByClassName("buttons-container")[0];const n=t=>{const e=document.createElement("button"),n=t.charAt(0).toUpperCase()+t.substring(1)+" Sort";e.setAttribute("id",t),e.innerHTML=n,e.onclick=()=>this.startSortOfType(t),this.buttonContainer.appendChild(e)};n("bubble"),n("merge"),n("quick"),this.barCountInput=document.getElementById("bar-count"),this.delayInput=document.getElementById("delay");const a=t=>{const n=t.target.value;if(0!==n.length){if(e.test(n)){const t=Math.min(parseInt(n),1e3);return this.lastBarCount=t,void(this.barCountInput.value=t)}this.barCountInput.value=this.lastBarCount||""}else this.lastBarCount=void 0},o=e=>{if(e.key&&"Enter"!==e.key)return;if(0===e.target.value.length)return;const n=parseInt(e.target.value);n!==t.totalPiecesOfData&&(i.HALT_ANIMATE=!0,t.totalPiecesOfData=n,t.fillWithRandomData(),h(),i.HALT_ANIMATE=!1)};this.barCountInput.addEventListener("input",a),this.barCountInput.addEventListener("propertychange",a),this.barCountInput.addEventListener("keyup",o),this.barCountInput.addEventListener("blur",o);const s=t=>{const n=t.target.value;if(0!==n.length){if(e.test(n)){const t=Math.min(parseInt(n),100);return this.lastDelay=t,void(this.delayInput.value=t)}this.delayInput.value=this.lastDelay||""}else this.lastDelay=void 0},l=t=>{if("Enter"!==t.key)return;const e=parseInt(t.target.value);i.DELAY_MS=e};this.delayInput.addEventListener("input",s),this.delayInput.addEventListener("propertychange",s),this.delayInput.addEventListener("keyup",l),this.delayInput.addEventListener("blur",l),document.getElementById("randomize-button").onclick=()=>{t.fillWithRandomData(),h(),i.IS_DATA_RANDOMIZED=!0}}},i={DELAY_MS:16,HALT_ANIMATE:!1,IS_SORTING:!1,ANIM_STARTED:!1,IS_DATA_RANDOMIZED:!1},a=[],o={resetColor:0,flashColor:1,swap:2,set:3,finished:4},s={DEFAULT:"LimeGreen",FLASH:"Tomato",HIGHLIGHT:"Gold",SWAP:"DarkMagenta",DONE:"DodgerBlue"},l=[],r=Object.keys(s);for(let t=0;t<r.length;t++)l[t]=r[t];t.init(),t.data;const u=[],d=document.getElementById("bars-container");function h(){for(;d.firstChild;)d.removeChild(d.firstChild);u.splice(0,u.length);for(let e=0;e<t.totalPiecesOfData;e++){const n=document.createElement("div");n.className="bar",n.style.backgroundColor=s.DEFAULT,n.style.height=t.data[e]+"px",u.push(n),d.appendChild(n)}d.style.paddingLeft=((document.body.clientWidth-3*u.length)/2).toString()+"px",console.log(d.style.paddingLeft)}async function c(){await function(){for(let t=0;t<u.length;t++)setTimeout((()=>{f(t,s.DONE)}),t*i.DELAY_MS);return new Promise((t=>{setTimeout((()=>{t()}),u.length*i.DELAY_MS)}))}();for(let t=0;t<u.length;t++)f(t,s.DEFAULT);i.ANIM_STARTED=!1,i.IS_SORTING=!1,i.IS_DATA_RANDOMIZED=!1}function f(t,e){"number"==typeof e&&(e=l[e]),void 0!==u[t]&&(u[t].style.backgroundColor=e)}function p(t,e){void 0!==u[t]&&(u[t].style.height=e+"px")}function g(t){return parseInt(u[t].style.height.slice(0,-2))}function m(t){return new Promise((e=>{setTimeout((()=>{e()}),t)}))}h(),n.createAll(i),document.getElementById("test-button").onclick=()=>{const e=[],n=["bubble","merge","quick"];for(let t of n)e.push([]);for(let i=0;i<100;i++)for(let i=0;i<n.length;i++){t.fillWithRandomData();const a=n[i];let o=t.data.slice().sort(((t,e)=>t-e));t[a+"Sort"]();for(let n=0;n<o.length;n++)if(o[n]!==t.data[n]){e[i].push(`${a} Sort fail ${o.toString()} | ${t.data.toString()}`);break}}for(let t=0;t<n.length;t++){console.log(`${n[t]} Sort had ${e[t].length} fails.`);for(let n=0;n<e[t].length;n++)console.log(e[t][n])}}})();